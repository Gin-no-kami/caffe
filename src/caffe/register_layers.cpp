#include <cstring>

#include "caffe/common.hpp"
#include "caffe/layer_factory.hpp"

#define DECLARE_REGISTER_LAYER_CREATOR(type)         \
  extern LayerRegisterer<float> g_creator_f_##type;  \
  extern LayerRegisterer<double> g_creator_d_##type

#define REGISTER_LAYER_CREATOR_CALL(type)         \
  g_creator_f_##type.do_nothing();  \
  g_creator_d_##type.do_nothing()


namespace caffe {

  DECLARE_REGISTER_LAYER_CREATOR(Convolution);
  DECLARE_REGISTER_LAYER_CREATOR(Pooling);
  DECLARE_REGISTER_LAYER_CREATOR(ReLU);
  DECLARE_REGISTER_LAYER_CREATOR(Sigmoid);
  DECLARE_REGISTER_LAYER_CREATOR(Softmax);
  DECLARE_REGISTER_LAYER_CREATOR(TanH);
  DECLARE_REGISTER_LAYER_CREATOR(InnerProduct);
  DECLARE_REGISTER_LAYER_CREATOR(AbsVal);
  DECLARE_REGISTER_LAYER_CREATOR(WindowData);
  DECLARE_REGISTER_LAYER_CREATOR(Threshold);
  DECLARE_REGISTER_LAYER_CREATOR(SPP);
  DECLARE_REGISTER_LAYER_CREATOR(Split);
  DECLARE_REGISTER_LAYER_CREATOR(SoftmaxWithLoss);
  DECLARE_REGISTER_LAYER_CREATOR(Slice);
  DECLARE_REGISTER_LAYER_CREATOR(Silence);
  DECLARE_REGISTER_LAYER_CREATOR(SigmoidCrossEntropyLoss);
  DECLARE_REGISTER_LAYER_CREATOR(Reshape);
  DECLARE_REGISTER_LAYER_CREATOR(PReLU);
  DECLARE_REGISTER_LAYER_CREATOR(Power);
  DECLARE_REGISTER_LAYER_CREATOR(MVN);
  DECLARE_REGISTER_LAYER_CREATOR(MultinomialLogisticLoss);
  DECLARE_REGISTER_LAYER_CREATOR(MemoryData);
  DECLARE_REGISTER_LAYER_CREATOR(LRN);
  DECLARE_REGISTER_LAYER_CREATOR(InnerProduct);
  DECLARE_REGISTER_LAYER_CREATOR(InfogainLoss);
  DECLARE_REGISTER_LAYER_CREATOR(ImageData);
  DECLARE_REGISTER_LAYER_CREATOR(Im2col);
  DECLARE_REGISTER_LAYER_CREATOR(HingeLoss);
  DECLARE_REGISTER_LAYER_CREATOR(HDF5Output);
  DECLARE_REGISTER_LAYER_CREATOR(HDF5Data);
  DECLARE_REGISTER_LAYER_CREATOR(Flatten);
  DECLARE_REGISTER_LAYER_CREATOR(Exp);
  DECLARE_REGISTER_LAYER_CREATOR(EuclideanLoss);
  DECLARE_REGISTER_LAYER_CREATOR(Eltwise);
  DECLARE_REGISTER_LAYER_CREATOR(DummyData);
  DECLARE_REGISTER_LAYER_CREATOR(Dropout);
  DECLARE_REGISTER_LAYER_CREATOR(Deconvolution);
  DECLARE_REGISTER_LAYER_CREATOR(Data);
  DECLARE_REGISTER_LAYER_CREATOR(ContrastiveLoss);
  DECLARE_REGISTER_LAYER_CREATOR(Concat);
  DECLARE_REGISTER_LAYER_CREATOR(BNLL);
  DECLARE_REGISTER_LAYER_CREATOR(ArgMax);
  DECLARE_REGISTER_LAYER_CREATOR(Accuracy);
  DECLARE_REGISTER_LAYER_CREATOR(AbsVal);

  // Regiser layers for msvc static library
  void RegisterLayers()
  {
    REGISTER_LAYER_CREATOR_CALL(Convolution);
    REGISTER_LAYER_CREATOR_CALL(Pooling);
    REGISTER_LAYER_CREATOR_CALL(ReLU);
    REGISTER_LAYER_CREATOR_CALL(Sigmoid);
    REGISTER_LAYER_CREATOR_CALL(Softmax);
    REGISTER_LAYER_CREATOR_CALL(TanH);
    REGISTER_LAYER_CREATOR_CALL(InnerProduct);
    REGISTER_LAYER_CREATOR_CALL(AbsVal);
    REGISTER_LAYER_CREATOR_CALL(WindowData);
    REGISTER_LAYER_CREATOR_CALL(Threshold);
    REGISTER_LAYER_CREATOR_CALL(SPP);
    REGISTER_LAYER_CREATOR_CALL(Split);
    REGISTER_LAYER_CREATOR_CALL(SoftmaxWithLoss);
    REGISTER_LAYER_CREATOR_CALL(Slice);
    REGISTER_LAYER_CREATOR_CALL(Silence);
    REGISTER_LAYER_CREATOR_CALL(SigmoidCrossEntropyLoss);
    REGISTER_LAYER_CREATOR_CALL(Reshape);
    REGISTER_LAYER_CREATOR_CALL(PReLU);
    REGISTER_LAYER_CREATOR_CALL(Power);
    REGISTER_LAYER_CREATOR_CALL(MVN);
    REGISTER_LAYER_CREATOR_CALL(MultinomialLogisticLoss);
    REGISTER_LAYER_CREATOR_CALL(MemoryData);
    REGISTER_LAYER_CREATOR_CALL(LRN);
    REGISTER_LAYER_CREATOR_CALL(InnerProduct);
    REGISTER_LAYER_CREATOR_CALL(InfogainLoss);
    REGISTER_LAYER_CREATOR_CALL(ImageData);
    REGISTER_LAYER_CREATOR_CALL(Im2col);
    REGISTER_LAYER_CREATOR_CALL(HingeLoss);
    REGISTER_LAYER_CREATOR_CALL(HDF5Output);
    REGISTER_LAYER_CREATOR_CALL(HDF5Data);
    REGISTER_LAYER_CREATOR_CALL(Flatten);
    REGISTER_LAYER_CREATOR_CALL(Exp);
    REGISTER_LAYER_CREATOR_CALL(EuclideanLoss);
    REGISTER_LAYER_CREATOR_CALL(Eltwise);
    REGISTER_LAYER_CREATOR_CALL(DummyData);
    REGISTER_LAYER_CREATOR_CALL(Dropout);
    REGISTER_LAYER_CREATOR_CALL(Deconvolution);
    REGISTER_LAYER_CREATOR_CALL(Data);
    REGISTER_LAYER_CREATOR_CALL(ContrastiveLoss);
    REGISTER_LAYER_CREATOR_CALL(Concat);
    REGISTER_LAYER_CREATOR_CALL(BNLL);
    REGISTER_LAYER_CREATOR_CALL(ArgMax);
    REGISTER_LAYER_CREATOR_CALL(Accuracy);
    REGISTER_LAYER_CREATOR_CALL(AbsVal);
  }

}  // namespace caffe

